name: BUILD
on:
  push:
    branches:
      - master
env:
  ECR_REPOSITORY_PREFIX: ${{ secrets.ECR_REPOSITORY_PREFIX }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_PREFIX }}-${{ secrets.APP_NAME }}
  IMAGE_TAG: ${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  PROJECT_ROOT: rss-client
  JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }} # new for handoffOne branch
  JENKINS_USER: frontend
jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      # ---[ Configuring AWS credentials and Logging in to ECR ]---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.EKS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EKS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build the image
        id: docker_build
        run: |
          cd ./$PROJECT_ROOT  
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
  handoff_to_jenkins:
    needs: [docker_build]
    name: Handoff to Jenkins for Deployments
    runs-on: ubuntu-latest
    steps:
      - name: handoff
        run: |
          curl -X POST http://$JENKINS_USER:$JENKINS_TOKEN@ad8d6edfec9aa4a79be8f07ba490356a-1499412652.us-east-1.elb.amazonaws.com/jenkins/job/FrontendDeployments/build?token=pokemon
